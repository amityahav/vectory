// Code generated by ent, DO NOT EDIT.

package collection

import (
	"entgo.io/ent/dialect/sql"
)

const (
	// Label holds the string label denoting the collection type in the database.
	Label = "collection"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldName holds the string denoting the name field in the database.
	FieldName = "name"
	// FieldIndexType holds the string denoting the index_type field in the database.
	FieldIndexType = "index_type"
	// FieldDataType holds the string denoting the data_type field in the database.
	FieldDataType = "data_type"
	// FieldEmbedderType holds the string denoting the embedder_type field in the database.
	FieldEmbedderType = "embedder_type"
	// FieldIndexParams holds the string denoting the index_params field in the database.
	FieldIndexParams = "index_params"
	// FieldEmbedderConfig holds the string denoting the embedder_config field in the database.
	FieldEmbedderConfig = "embedder_config"
	// FieldMappings holds the string denoting the mappings field in the database.
	FieldMappings = "mappings"
	// Table holds the table name of the collection in the database.
	Table = "collections"
)

// Columns holds all SQL columns for collection fields.
var Columns = []string{
	FieldID,
	FieldName,
	FieldIndexType,
	FieldDataType,
	FieldEmbedderType,
	FieldIndexParams,
	FieldEmbedderConfig,
	FieldMappings,
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	return false
}

// OrderOption defines the ordering options for the Collection queries.
type OrderOption func(*sql.Selector)

// ByID orders the results by the id field.
func ByID(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldID, opts...).ToFunc()
}

// ByName orders the results by the name field.
func ByName(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldName, opts...).ToFunc()
}

// ByIndexType orders the results by the index_type field.
func ByIndexType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldIndexType, opts...).ToFunc()
}

// ByDataType orders the results by the data_type field.
func ByDataType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldDataType, opts...).ToFunc()
}

// ByEmbedderType orders the results by the embedder_type field.
func ByEmbedderType(opts ...sql.OrderTermOption) OrderOption {
	return sql.OrderByField(FieldEmbedderType, opts...).ToFunc()
}

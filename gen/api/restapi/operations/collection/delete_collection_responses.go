// Code generated by go-swagger; DO NOT EDIT.

package collection

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"Vectory/gen/api/models"
)

// DeleteCollectionOKCode is the HTTP code returned for type DeleteCollectionOK
const DeleteCollectionOKCode int = 200

/*DeleteCollectionOK valid operation

swagger:response deleteCollectionOK
*/
type DeleteCollectionOK struct {

	/*
	  In: Body
	*/
	Payload *models.APIResponse `json:"body,omitempty"`
}

// NewDeleteCollectionOK creates DeleteCollectionOK with default headers values
func NewDeleteCollectionOK() *DeleteCollectionOK {

	return &DeleteCollectionOK{}
}

// WithPayload adds the payload to the delete collection o k response
func (o *DeleteCollectionOK) WithPayload(payload *models.APIResponse) *DeleteCollectionOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the delete collection o k response
func (o *DeleteCollectionOK) SetPayload(payload *models.APIResponse) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *DeleteCollectionOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// DeleteCollectionBadRequestCode is the HTTP code returned for type DeleteCollectionBadRequest
const DeleteCollectionBadRequestCode int = 400

/*DeleteCollectionBadRequest Invalid collection name

swagger:response deleteCollectionBadRequest
*/
type DeleteCollectionBadRequest struct {
}

// NewDeleteCollectionBadRequest creates DeleteCollectionBadRequest with default headers values
func NewDeleteCollectionBadRequest() *DeleteCollectionBadRequest {

	return &DeleteCollectionBadRequest{}
}

// WriteResponse to the client
func (o *DeleteCollectionBadRequest) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.Header().Del(runtime.HeaderContentType) //Remove Content-Type on empty responses

	rw.WriteHeader(400)
}
